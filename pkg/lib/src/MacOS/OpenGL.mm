#include <cassert>
#include <iostream>
#include <OpenGL/gl3.h>
#include <OpenGL/gl3ext.h>
#include <Boom/Utilities.hpp>
#include "../OpenGL.hpp"
#include "Window.hpp"

namespace boom {

struct __OpenGLImpl {
    NSOpenGLContext* context;
    NSWindow* window;
    NSOpenGLView* view;
};

void OpenGL::_implInit(boom::OpenGLOptions const& options) {
    NSOpenGLPixelFormat* format = [[NSOpenGLPixelFormat alloc]
        initWithAttributes: (NSOpenGLPixelFormatAttribute[]){
            NSOpenGLPFAOpenGLProfile, NSOpenGLProfileVersion4_1Core,
            NSOpenGLPFASampleBuffers, 1,
            NSOpenGLPFASamples,       4,
            0
        }
    ];
    NSOpenGLContext* context = [[NSOpenGLContext alloc]
        initWithFormat: format
          shareContext: (
            options.shared.has_value()
                ? options.shared.value()->_impl->context
                : nil
          )
    ];
    [context setValues: (GLint[]){ 0 } forParameter: NSOpenGLContextParameterSurfaceOpacity];
    if (options.window.has_value()) {
        NSWindow* window = options.window.value()->_impl->window;
        NSOpenGLView* view = [[NSOpenGLView alloc]
            initWithFrame: window.contentView.frame
            pixelFormat: [context pixelFormat]
        ];
        [view setOpenGLContext: context];
        [window setContentView: view];
        _impl = new boom::__OpenGLImpl{
            .context = context,
            .window = window,
            .view = view
        };
    } else {
        _impl = new boom::__OpenGLImpl{
            .context = context,
            .window = nil,
            .view = nil
        };
    }
}

void OpenGL::_implDone() {
    _impl->context = nil;
    delete _impl;
}

void OpenGL::_implSwap() const {
    [_impl->context flushBuffer];
}

void OpenGL::_implCurrent() const {
    [_impl->context makeCurrentContext];
}

void OpenGL::_implBootstrap() {
    static auto bootstrapped = false;
    if (bootstrapped == false) {
        // boom::glAccum = ::glAccum;
        boom::glActiveShaderProgram = ::glActiveShaderProgram;
        boom::glActiveTexture = ::glActiveTexture;
        // boom::glAlphaFunc = ::glAlphaFunc;
        // boom::glAlphaFuncx = ::glAlphaFuncx;
        // boom::glAreTexturesResident = ::glAreTexturesResident;
        // boom::glArrayElement = ::glArrayElement;
        boom::glAttachShader = ::glAttachShader;
        // boom::glBegin = ::glBegin;
        boom::glBeginConditionalRender = ::glBeginConditionalRender;
        boom::glBeginQuery = ::glBeginQuery;
        boom::glBeginQueryIndexed = ::glBeginQueryIndexed;
        boom::glBeginTransformFeedback = ::glBeginTransformFeedback;
        boom::glBindAttribLocation = ::glBindAttribLocation;
        boom::glBindBuffer = ::glBindBuffer;
        boom::glBindBufferBase = ::glBindBufferBase;
        boom::glBindBufferRange = ::glBindBufferRange;
        // boom::glBindBuffersBase = ::glBindBuffersBase;
        // boom::glBindBuffersRange = ::glBindBuffersRange;
        boom::glBindFragDataLocation = ::glBindFragDataLocation;
        boom::glBindFragDataLocationIndexed = ::glBindFragDataLocationIndexed;
        boom::glBindFramebuffer = ::glBindFramebuffer;
        // boom::glBindImageTexture = ::glBindImageTexture;
        // boom::glBindImageTextures = ::glBindImageTextures;
        boom::glBindProgramPipeline = ::glBindProgramPipeline;
        boom::glBindRenderbuffer = ::glBindRenderbuffer;
        boom::glBindSampler = ::glBindSampler;
        // boom::glBindSamplers = ::glBindSamplers;
        boom::glBindTexture = ::glBindTexture;
        // boom::glBindTextureUnit = ::glBindTextureUnit;
        // boom::glBindTextures = ::glBindTextures;
        boom::glBindTransformFeedback = ::glBindTransformFeedback;
        boom::glBindVertexArray = ::glBindVertexArray;
        // boom::glBindVertexBuffer = ::glBindVertexBuffer;
        // boom::glBindVertexBuffers = ::glBindVertexBuffers;
        // boom::glBitmap = ::glBitmap;
        // boom::glBlendBarrier = ::glBlendBarrier;
        boom::glBlendColor = ::glBlendColor;
        boom::glBlendEquation = ::glBlendEquation;
        boom::glBlendEquationSeparate = ::glBlendEquationSeparate;
        boom::glBlendEquationSeparatei = ::glBlendEquationSeparatei;
        boom::glBlendEquationi = ::glBlendEquationi;
        boom::glBlendFunc = ::glBlendFunc;
        boom::glBlendFuncSeparate = ::glBlendFuncSeparate;
        boom::glBlendFuncSeparatei = ::glBlendFuncSeparatei;
        boom::glBlendFunci = ::glBlendFunci;
        boom::glBlitFramebuffer = ::glBlitFramebuffer;
        // boom::glBlitNamedFramebuffer = ::glBlitNamedFramebuffer;
        boom::glBufferData = ::glBufferData;
        // boom::glBufferStorage = ::glBufferStorage;
        boom::glBufferSubData = ::glBufferSubData;
        // boom::glCallList = ::glCallList;
        // boom::glCallLists = ::glCallLists;
        boom::glCheckFramebufferStatus = ::glCheckFramebufferStatus;
        // boom::glCheckNamedFramebufferStatus = ::glCheckNamedFramebufferStatus;
        boom::glClampColor = ::glClampColor;
        boom::glClear = ::glClear;
        // boom::glClearAccum = ::glClearAccum;
        // boom::glClearBufferData = ::glClearBufferData;
        // boom::glClearBufferSubData = ::glClearBufferSubData;
        boom::glClearBufferfi = ::glClearBufferfi;
        boom::glClearBufferfv = ::glClearBufferfv;
        boom::glClearBufferiv = ::glClearBufferiv;
        boom::glClearBufferuiv = ::glClearBufferuiv;
        boom::glClearColor = ::glClearColor;
        // boom::glClearColorx = ::glClearColorx;
        boom::glClearDepth = ::glClearDepth;
        boom::glClearDepthf = ::glClearDepthf;
        // boom::glClearDepthx = ::glClearDepthx;
        // boom::glClearIndex = ::glClearIndex;
        // boom::glClearNamedBufferData = ::glClearNamedBufferData;
        // boom::glClearNamedBufferSubData = ::glClearNamedBufferSubData;
        // boom::glClearNamedFramebufferfi = ::glClearNamedFramebufferfi;
        // boom::glClearNamedFramebufferfv = ::glClearNamedFramebufferfv;
        // boom::glClearNamedFramebufferiv = ::glClearNamedFramebufferiv;
        // boom::glClearNamedFramebufferuiv = ::glClearNamedFramebufferuiv;
        boom::glClearStencil = ::glClearStencil;
        // boom::glClearTexImage = ::glClearTexImage;
        // boom::glClearTexSubImage = ::glClearTexSubImage;
        // boom::glClientActiveTexture = ::glClientActiveTexture;
        boom::glClientWaitSync = ::glClientWaitSync;
        // boom::glClipControl = ::glClipControl;
        // boom::glClipPlane = ::glClipPlane;
        // boom::glClipPlanef = ::glClipPlanef;
        // boom::glClipPlanex = ::glClipPlanex;
        // boom::glColor3b = ::glColor3b;
        // boom::glColor3bv = ::glColor3bv;
        // boom::glColor3d = ::glColor3d;
        // boom::glColor3dv = ::glColor3dv;
        // boom::glColor3f = ::glColor3f;
        // boom::glColor3fv = ::glColor3fv;
        // boom::glColor3i = ::glColor3i;
        // boom::glColor3iv = ::glColor3iv;
        // boom::glColor3s = ::glColor3s;
        // boom::glColor3sv = ::glColor3sv;
        // boom::glColor3ub = ::glColor3ub;
        // boom::glColor3ubv = ::glColor3ubv;
        // boom::glColor3ui = ::glColor3ui;
        // boom::glColor3uiv = ::glColor3uiv;
        // boom::glColor3us = ::glColor3us;
        // boom::glColor3usv = ::glColor3usv;
        // boom::glColor4b = ::glColor4b;
        // boom::glColor4bv = ::glColor4bv;
        // boom::glColor4d = ::glColor4d;
        // boom::glColor4dv = ::glColor4dv;
        // boom::glColor4f = ::glColor4f;
        // boom::glColor4fv = ::glColor4fv;
        // boom::glColor4i = ::glColor4i;
        // boom::glColor4iv = ::glColor4iv;
        // boom::glColor4s = ::glColor4s;
        // boom::glColor4sv = ::glColor4sv;
        // boom::glColor4ub = ::glColor4ub;
        // boom::glColor4ubv = ::glColor4ubv;
        // boom::glColor4ui = ::glColor4ui;
        // boom::glColor4uiv = ::glColor4uiv;
        // boom::glColor4us = ::glColor4us;
        // boom::glColor4usv = ::glColor4usv;
        // boom::glColor4x = ::glColor4x;
        boom::glColorMask = ::glColorMask;
        boom::glColorMaski = ::glColorMaski;
        // boom::glColorMaterial = ::glColorMaterial;
        // boom::glColorP3ui = ::glColorP3ui;
        // boom::glColorP3uiv = ::glColorP3uiv;
        // boom::glColorP4ui = ::glColorP4ui;
        // boom::glColorP4uiv = ::glColorP4uiv;
        // boom::glColorPointer = ::glColorPointer;
        boom::glCompileShader = ::glCompileShader;
        boom::glCompressedTexImage1D = ::glCompressedTexImage1D;
        boom::glCompressedTexImage2D = ::glCompressedTexImage2D;
        boom::glCompressedTexImage3D = ::glCompressedTexImage3D;
        boom::glCompressedTexSubImage1D = ::glCompressedTexSubImage1D;
        boom::glCompressedTexSubImage2D = ::glCompressedTexSubImage2D;
        boom::glCompressedTexSubImage3D = ::glCompressedTexSubImage3D;
        // boom::glCompressedTextureSubImage1D = ::glCompressedTextureSubImage1D;
        // boom::glCompressedTextureSubImage2D = ::glCompressedTextureSubImage2D;
        // boom::glCompressedTextureSubImage3D = ::glCompressedTextureSubImage3D;
        boom::glCopyBufferSubData = ::glCopyBufferSubData;
        // boom::glCopyImageSubData = ::glCopyImageSubData;
        // boom::glCopyNamedBufferSubData = ::glCopyNamedBufferSubData;
        // boom::glCopyPixels = ::glCopyPixels;
        boom::glCopyTexImage1D = ::glCopyTexImage1D;
        boom::glCopyTexImage2D = ::glCopyTexImage2D;
        boom::glCopyTexSubImage1D = ::glCopyTexSubImage1D;
        boom::glCopyTexSubImage2D = ::glCopyTexSubImage2D;
        boom::glCopyTexSubImage3D = ::glCopyTexSubImage3D;
        // boom::glCopyTextureSubImage1D = ::glCopyTextureSubImage1D;
        // boom::glCopyTextureSubImage2D = ::glCopyTextureSubImage2D;
        // boom::glCopyTextureSubImage3D = ::glCopyTextureSubImage3D;
        // boom::glCreateBuffers = ::glCreateBuffers;
        // boom::glCreateFramebuffers = ::glCreateFramebuffers;
        boom::glCreateProgram = ::glCreateProgram;
        // boom::glCreateProgramPipelines = ::glCreateProgramPipelines;
        // boom::glCreateQueries = ::glCreateQueries;
        // boom::glCreateRenderbuffers = ::glCreateRenderbuffers;
        // boom::glCreateSamplers = ::glCreateSamplers;
        boom::glCreateShader = ::glCreateShader;
        boom::glCreateShaderProgramv = ::glCreateShaderProgramv;
        // boom::glCreateTextures = ::glCreateTextures;
        // boom::glCreateTransformFeedbacks = ::glCreateTransformFeedbacks;
        // boom::glCreateVertexArrays = ::glCreateVertexArrays;
        boom::glCullFace = ::glCullFace;
        // boom::glDebugMessageCallback = ::glDebugMessageCallback;
        // boom::glDebugMessageControl = ::glDebugMessageControl;
        // boom::glDebugMessageInsert = ::glDebugMessageInsert;
        boom::glDeleteBuffers = ::glDeleteBuffers;
        boom::glDeleteFramebuffers = ::glDeleteFramebuffers;
        // boom::glDeleteLists = ::glDeleteLists;
        boom::glDeleteProgram = ::glDeleteProgram;
        boom::glDeleteProgramPipelines = ::glDeleteProgramPipelines;
        boom::glDeleteQueries = ::glDeleteQueries;
        boom::glDeleteRenderbuffers = ::glDeleteRenderbuffers;
        boom::glDeleteSamplers = ::glDeleteSamplers;
        boom::glDeleteShader = ::glDeleteShader;
        boom::glDeleteSync = ::glDeleteSync;
        boom::glDeleteTextures = ::glDeleteTextures;
        boom::glDeleteTransformFeedbacks = ::glDeleteTransformFeedbacks;
        boom::glDeleteVertexArrays = ::glDeleteVertexArrays;
        boom::glDepthFunc = ::glDepthFunc;
        boom::glDepthMask = ::glDepthMask;
        boom::glDepthRange = ::glDepthRange;
        boom::glDepthRangeArrayv = ::glDepthRangeArrayv;
        boom::glDepthRangeIndexed = ::glDepthRangeIndexed;
        boom::glDepthRangef = ::glDepthRangef;
        // boom::glDepthRangex = ::glDepthRangex;
        boom::glDetachShader = ::glDetachShader;
        boom::glDisable = ::glDisable;
        // boom::glDisableClientState = ::glDisableClientState;
        // boom::glDisableVertexArrayAttrib = ::glDisableVertexArrayAttrib;
        boom::glDisableVertexAttribArray = ::glDisableVertexAttribArray;
        boom::glDisablei = ::glDisablei;
        // boom::glDispatchCompute = ::glDispatchCompute;
        // boom::glDispatchComputeIndirect = ::glDispatchComputeIndirect;
        boom::glDrawArrays = ::glDrawArrays;
        boom::glDrawArraysIndirect = ::glDrawArraysIndirect;
        boom::glDrawArraysInstanced = ::glDrawArraysInstanced;
        // boom::glDrawArraysInstancedBaseInstance = ::glDrawArraysInstancedBaseInstance;
        boom::glDrawBuffer = ::glDrawBuffer;
        boom::glDrawBuffers = ::glDrawBuffers;
        boom::glDrawElements = ::glDrawElements;
        boom::glDrawElementsBaseVertex = ::glDrawElementsBaseVertex;
        boom::glDrawElementsIndirect = ::glDrawElementsIndirect;
        boom::glDrawElementsInstanced = ::glDrawElementsInstanced;
        // boom::glDrawElementsInstancedBaseInstance = ::glDrawElementsInstancedBaseInstance;
        boom::glDrawElementsInstancedBaseVertex = ::glDrawElementsInstancedBaseVertex;
        // boom::glDrawElementsInstancedBaseVertexBaseInstance = ::glDrawElementsInstancedBaseVertexBaseInstance;
        // boom::glDrawPixels = ::glDrawPixels;
        boom::glDrawRangeElements = ::glDrawRangeElements;
        boom::glDrawRangeElementsBaseVertex = ::glDrawRangeElementsBaseVertex;
        boom::glDrawTransformFeedback = ::glDrawTransformFeedback;
        // boom::glDrawTransformFeedbackInstanced = ::glDrawTransformFeedbackInstanced;
        boom::glDrawTransformFeedbackStream = ::glDrawTransformFeedbackStream;
        // boom::glDrawTransformFeedbackStreamInstanced = ::glDrawTransformFeedbackStreamInstanced;
        // boom::glEdgeFlag = ::glEdgeFlag;
        // boom::glEdgeFlagPointer = ::glEdgeFlagPointer;
        // boom::glEdgeFlagv = ::glEdgeFlagv;
        boom::glEnable = ::glEnable;
        // boom::glEnableClientState = ::glEnableClientState;
        // boom::glEnableVertexArrayAttrib = ::glEnableVertexArrayAttrib;
        boom::glEnableVertexAttribArray = ::glEnableVertexAttribArray;
        boom::glEnablei = ::glEnablei;
        // boom::glEnd = ::glEnd;
        boom::glEndConditionalRender = ::glEndConditionalRender;
        // boom::glEndList = ::glEndList;
        boom::glEndQuery = ::glEndQuery;
        boom::glEndQueryIndexed = ::glEndQueryIndexed;
        boom::glEndTransformFeedback = ::glEndTransformFeedback;
        // boom::glEvalCoord1d = ::glEvalCoord1d;
        // boom::glEvalCoord1dv = ::glEvalCoord1dv;
        // boom::glEvalCoord1f = ::glEvalCoord1f;
        // boom::glEvalCoord1fv = ::glEvalCoord1fv;
        // boom::glEvalCoord2d = ::glEvalCoord2d;
        // boom::glEvalCoord2dv = ::glEvalCoord2dv;
        // boom::glEvalCoord2f = ::glEvalCoord2f;
        // boom::glEvalCoord2fv = ::glEvalCoord2fv;
        // boom::glEvalMesh1 = ::glEvalMesh1;
        // boom::glEvalMesh2 = ::glEvalMesh2;
        // boom::glEvalPoint1 = ::glEvalPoint1;
        // boom::glEvalPoint2 = ::glEvalPoint2;
        // boom::glFeedbackBuffer = ::glFeedbackBuffer;
        boom::glFenceSync = ::glFenceSync;
        boom::glFinish = ::glFinish;
        boom::glFlush = ::glFlush;
        boom::glFlushMappedBufferRange = ::glFlushMappedBufferRange;
        // boom::glFlushMappedNamedBufferRange = ::glFlushMappedNamedBufferRange;
        // boom::glFogCoordPointer = ::glFogCoordPointer;
        // boom::glFogCoordd = ::glFogCoordd;
        // boom::glFogCoorddv = ::glFogCoorddv;
        // boom::glFogCoordf = ::glFogCoordf;
        // boom::glFogCoordfv = ::glFogCoordfv;
        // boom::glFogf = ::glFogf;
        // boom::glFogfv = ::glFogfv;
        // boom::glFogi = ::glFogi;
        // boom::glFogiv = ::glFogiv;
        // boom::glFogx = ::glFogx;
        // boom::glFogxv = ::glFogxv;
        // boom::glFramebufferParameteri = ::glFramebufferParameteri;
        boom::glFramebufferRenderbuffer = ::glFramebufferRenderbuffer;
        boom::glFramebufferTexture = ::glFramebufferTexture;
        boom::glFramebufferTexture1D = ::glFramebufferTexture1D;
        boom::glFramebufferTexture2D = ::glFramebufferTexture2D;
        boom::glFramebufferTexture3D = ::glFramebufferTexture3D;
        boom::glFramebufferTextureLayer = ::glFramebufferTextureLayer;
        boom::glFrontFace = ::glFrontFace;
        // boom::glFrustum = ::glFrustum;
        // boom::glFrustumf = ::glFrustumf;
        // boom::glFrustumx = ::glFrustumx;
        boom::glGenBuffers = ::glGenBuffers;
        boom::glGenFramebuffers = ::glGenFramebuffers;
        // boom::glGenLists = ::glGenLists;
        boom::glGenProgramPipelines = ::glGenProgramPipelines;
        boom::glGenQueries = ::glGenQueries;
        boom::glGenRenderbuffers = ::glGenRenderbuffers;
        boom::glGenSamplers = ::glGenSamplers;
        boom::glGenTextures = ::glGenTextures;
        boom::glGenTransformFeedbacks = ::glGenTransformFeedbacks;
        boom::glGenVertexArrays = ::glGenVertexArrays;
        boom::glGenerateMipmap = ::glGenerateMipmap;
        // boom::glGenerateTextureMipmap = ::glGenerateTextureMipmap;
        // boom::glGetActiveAtomicCounterBufferiv = ::glGetActiveAtomicCounterBufferiv;
        boom::glGetActiveAttrib = ::glGetActiveAttrib;
        boom::glGetActiveSubroutineName = ::glGetActiveSubroutineName;
        boom::glGetActiveSubroutineUniformName = ::glGetActiveSubroutineUniformName;
        boom::glGetActiveSubroutineUniformiv = ::glGetActiveSubroutineUniformiv;
        boom::glGetActiveUniform = ::glGetActiveUniform;
        boom::glGetActiveUniformBlockName = ::glGetActiveUniformBlockName;
        boom::glGetActiveUniformBlockiv = ::glGetActiveUniformBlockiv;
        boom::glGetActiveUniformName = ::glGetActiveUniformName;
        boom::glGetActiveUniformsiv = ::glGetActiveUniformsiv;
        boom::glGetAttachedShaders = ::glGetAttachedShaders;
        boom::glGetAttribLocation = ::glGetAttribLocation;
        boom::glGetBooleani_v = ::glGetBooleani_v;
        boom::glGetBooleanv = ::glGetBooleanv;
        boom::glGetBufferParameteri64v = ::glGetBufferParameteri64v;
        boom::glGetBufferParameteriv = ::glGetBufferParameteriv;
        boom::glGetBufferPointerv = ::glGetBufferPointerv;
        boom::glGetBufferSubData = ::glGetBufferSubData;
        // boom::glGetClipPlane = ::glGetClipPlane;
        // boom::glGetClipPlanef = ::glGetClipPlanef;
        // boom::glGetClipPlanex = ::glGetClipPlanex;
        boom::glGetCompressedTexImage = ::glGetCompressedTexImage;
        // boom::glGetCompressedTextureImage = ::glGetCompressedTextureImage;
        // boom::glGetCompressedTextureSubImage = ::glGetCompressedTextureSubImage;
        // boom::glGetDebugMessageLog = ::glGetDebugMessageLog;
        boom::glGetDoublei_v = ::glGetDoublei_v;
        boom::glGetDoublev = ::glGetDoublev;
        boom::glGetError = ::glGetError;
        // boom::glGetFixedv = ::glGetFixedv;
        boom::glGetFloati_v = ::glGetFloati_v;
        boom::glGetFloatv = ::glGetFloatv;
        boom::glGetFragDataIndex = ::glGetFragDataIndex;
        boom::glGetFragDataLocation = ::glGetFragDataLocation;
        boom::glGetFramebufferAttachmentParameteriv = ::glGetFramebufferAttachmentParameteriv;
        // boom::glGetFramebufferParameteriv = ::glGetFramebufferParameteriv;
        // boom::glGetGraphicsResetStatus = ::glGetGraphicsResetStatus;
        boom::glGetInteger64i_v = ::glGetInteger64i_v;
        boom::glGetInteger64v = ::glGetInteger64v;
        boom::glGetIntegeri_v = ::glGetIntegeri_v;
        boom::glGetIntegerv = ::glGetIntegerv;
        // boom::glGetInternalformati64v = ::glGetInternalformati64v;
        boom::glGetInternalformativ = ::glGetInternalformativ;
        // boom::glGetLightfv = ::glGetLightfv;
        // boom::glGetLightiv = ::glGetLightiv;
        // boom::glGetLightxv = ::glGetLightxv;
        // boom::glGetMapdv = ::glGetMapdv;
        // boom::glGetMapfv = ::glGetMapfv;
        // boom::glGetMapiv = ::glGetMapiv;
        // boom::glGetMaterialfv = ::glGetMaterialfv;
        // boom::glGetMaterialiv = ::glGetMaterialiv;
        // boom::glGetMaterialxv = ::glGetMaterialxv;
        boom::glGetMultisamplefv = ::glGetMultisamplefv;
        // boom::glGetNamedBufferParameteri64v = ::glGetNamedBufferParameteri64v;
        // boom::glGetNamedBufferParameteriv = ::glGetNamedBufferParameteriv;
        // boom::glGetNamedBufferPointerv = ::glGetNamedBufferPointerv;
        // boom::glGetNamedBufferSubData = ::glGetNamedBufferSubData;
        // boom::glGetNamedFramebufferAttachmentParameteriv = ::glGetNamedFramebufferAttachmentParameteriv;
        // boom::glGetNamedFramebufferParameteriv = ::glGetNamedFramebufferParameteriv;
        // boom::glGetNamedRenderbufferParameteriv = ::glGetNamedRenderbufferParameteriv;
        // boom::glGetObjectLabel = ::glGetObjectLabel;
        // boom::glGetObjectPtrLabel = ::glGetObjectPtrLabel;
        // boom::glGetPixelMapfv = ::glGetPixelMapfv;
        // boom::glGetPixelMapuiv = ::glGetPixelMapuiv;
        // boom::glGetPixelMapusv = ::glGetPixelMapusv;
        // boom::glGetPointerv = ::glGetPointerv;
        // boom::glGetPolygonStipple = ::glGetPolygonStipple;
        boom::glGetProgramBinary = ::glGetProgramBinary;
        boom::glGetProgramInfoLog = ::glGetProgramInfoLog;
        // boom::glGetProgramInterfaceiv = ::glGetProgramInterfaceiv;
        boom::glGetProgramPipelineInfoLog = ::glGetProgramPipelineInfoLog;
        boom::glGetProgramPipelineiv = ::glGetProgramPipelineiv;
        // boom::glGetProgramResourceIndex = ::glGetProgramResourceIndex;
        // boom::glGetProgramResourceLocation = ::glGetProgramResourceLocation;
        // boom::glGetProgramResourceLocationIndex = ::glGetProgramResourceLocationIndex;
        // boom::glGetProgramResourceName = ::glGetProgramResourceName;
        // boom::glGetProgramResourceiv = ::glGetProgramResourceiv;
        boom::glGetProgramStageiv = ::glGetProgramStageiv;
        boom::glGetProgramiv = ::glGetProgramiv;
        // boom::glGetQueryBufferObjecti64v = ::glGetQueryBufferObjecti64v;
        // boom::glGetQueryBufferObjectiv = ::glGetQueryBufferObjectiv;
        // boom::glGetQueryBufferObjectui64v = ::glGetQueryBufferObjectui64v;
        // boom::glGetQueryBufferObjectuiv = ::glGetQueryBufferObjectuiv;
        boom::glGetQueryIndexediv = ::glGetQueryIndexediv;
        boom::glGetQueryObjecti64v = ::glGetQueryObjecti64v;
        boom::glGetQueryObjectiv = ::glGetQueryObjectiv;
        boom::glGetQueryObjectui64v = ::glGetQueryObjectui64v;
        boom::glGetQueryObjectuiv = ::glGetQueryObjectuiv;
        boom::glGetQueryiv = ::glGetQueryiv;
        boom::glGetRenderbufferParameteriv = ::glGetRenderbufferParameteriv;
        boom::glGetSamplerParameterIiv = ::glGetSamplerParameterIiv;
        boom::glGetSamplerParameterIuiv = ::glGetSamplerParameterIuiv;
        boom::glGetSamplerParameterfv = ::glGetSamplerParameterfv;
        boom::glGetSamplerParameteriv = ::glGetSamplerParameteriv;
        boom::glGetShaderInfoLog = ::glGetShaderInfoLog;
        boom::glGetShaderPrecisionFormat = ::glGetShaderPrecisionFormat;
        boom::glGetShaderSource = ::glGetShaderSource;
        boom::glGetShaderiv = ::glGetShaderiv;
        boom::glGetString = ::glGetString;
        boom::glGetStringi = ::glGetStringi;
        boom::glGetSubroutineIndex = ::glGetSubroutineIndex;
        boom::glGetSubroutineUniformLocation = ::glGetSubroutineUniformLocation;
        boom::glGetSynciv = ::glGetSynciv;
        // boom::glGetTexEnvfv = ::glGetTexEnvfv;
        // boom::glGetTexEnviv = ::glGetTexEnviv;
        // boom::glGetTexEnvxv = ::glGetTexEnvxv;
        // boom::glGetTexGendv = ::glGetTexGendv;
        // boom::glGetTexGenfv = ::glGetTexGenfv;
        // boom::glGetTexGeniv = ::glGetTexGeniv;
        boom::glGetTexImage = ::glGetTexImage;
        boom::glGetTexLevelParameterfv = ::glGetTexLevelParameterfv;
        boom::glGetTexLevelParameteriv = ::glGetTexLevelParameteriv;
        boom::glGetTexParameterIiv = ::glGetTexParameterIiv;
        boom::glGetTexParameterIuiv = ::glGetTexParameterIuiv;
        boom::glGetTexParameterfv = ::glGetTexParameterfv;
        boom::glGetTexParameteriv = ::glGetTexParameteriv;
        // boom::glGetTexParameterxv = ::glGetTexParameterxv;
        // boom::glGetTextureImage = ::glGetTextureImage;
        // boom::glGetTextureLevelParameterfv = ::glGetTextureLevelParameterfv;
        // boom::glGetTextureLevelParameteriv = ::glGetTextureLevelParameteriv;
        // boom::glGetTextureParameterIiv = ::glGetTextureParameterIiv;
        // boom::glGetTextureParameterIuiv = ::glGetTextureParameterIuiv;
        // boom::glGetTextureParameterfv = ::glGetTextureParameterfv;
        // boom::glGetTextureParameteriv = ::glGetTextureParameteriv;
        // boom::glGetTextureSubImage = ::glGetTextureSubImage;
        boom::glGetTransformFeedbackVarying = ::glGetTransformFeedbackVarying;
        // boom::glGetTransformFeedbacki64_v = ::glGetTransformFeedbacki64_v;
        // boom::glGetTransformFeedbacki_v = ::glGetTransformFeedbacki_v;
        // boom::glGetTransformFeedbackiv = ::glGetTransformFeedbackiv;
        boom::glGetUniformBlockIndex = ::glGetUniformBlockIndex;
        boom::glGetUniformIndices = ::glGetUniformIndices;
        boom::glGetUniformLocation = ::glGetUniformLocation;
        boom::glGetUniformSubroutineuiv = ::glGetUniformSubroutineuiv;
        boom::glGetUniformdv = ::glGetUniformdv;
        boom::glGetUniformfv = ::glGetUniformfv;
        boom::glGetUniformiv = ::glGetUniformiv;
        boom::glGetUniformuiv = ::glGetUniformuiv;
        // boom::glGetVertexArrayIndexed64iv = ::glGetVertexArrayIndexed64iv;
        // boom::glGetVertexArrayIndexediv = ::glGetVertexArrayIndexediv;
        // boom::glGetVertexArrayiv = ::glGetVertexArrayiv;
        boom::glGetVertexAttribIiv = ::glGetVertexAttribIiv;
        boom::glGetVertexAttribIuiv = ::glGetVertexAttribIuiv;
        boom::glGetVertexAttribLdv = ::glGetVertexAttribLdv;
        boom::glGetVertexAttribPointerv = ::glGetVertexAttribPointerv;
        boom::glGetVertexAttribdv = ::glGetVertexAttribdv;
        boom::glGetVertexAttribfv = ::glGetVertexAttribfv;
        boom::glGetVertexAttribiv = ::glGetVertexAttribiv;
        // boom::glGetnColorTable = ::glGetnColorTable;
        // boom::glGetnCompressedTexImage = ::glGetnCompressedTexImage;
        // boom::glGetnConvolutionFilter = ::glGetnConvolutionFilter;
        // boom::glGetnHistogram = ::glGetnHistogram;
        // boom::glGetnMapdv = ::glGetnMapdv;
        // boom::glGetnMapfv = ::glGetnMapfv;
        // boom::glGetnMapiv = ::glGetnMapiv;
        // boom::glGetnMinmax = ::glGetnMinmax;
        // boom::glGetnPixelMapfv = ::glGetnPixelMapfv;
        // boom::glGetnPixelMapuiv = ::glGetnPixelMapuiv;
        // boom::glGetnPixelMapusv = ::glGetnPixelMapusv;
        // boom::glGetnPolygonStipple = ::glGetnPolygonStipple;
        // boom::glGetnSeparableFilter = ::glGetnSeparableFilter;
        // boom::glGetnTexImage = ::glGetnTexImage;
        // boom::glGetnUniformdv = ::glGetnUniformdv;
        // boom::glGetnUniformfv = ::glGetnUniformfv;
        // boom::glGetnUniformiv = ::glGetnUniformiv;
        // boom::glGetnUniformuiv = ::glGetnUniformuiv;
        boom::glHint = ::glHint;
        // boom::glIndexMask = ::glIndexMask;
        // boom::glIndexPointer = ::glIndexPointer;
        // boom::glIndexd = ::glIndexd;
        // boom::glIndexdv = ::glIndexdv;
        // boom::glIndexf = ::glIndexf;
        // boom::glIndexfv = ::glIndexfv;
        // boom::glIndexi = ::glIndexi;
        // boom::glIndexiv = ::glIndexiv;
        // boom::glIndexs = ::glIndexs;
        // boom::glIndexsv = ::glIndexsv;
        // boom::glIndexub = ::glIndexub;
        // boom::glIndexubv = ::glIndexubv;
        // boom::glInitNames = ::glInitNames;
        // boom::glInterleavedArrays = ::glInterleavedArrays;
        // boom::glInvalidateBufferData = ::glInvalidateBufferData;
        // boom::glInvalidateBufferSubData = ::glInvalidateBufferSubData;
        // boom::glInvalidateFramebuffer = ::glInvalidateFramebuffer;
        // boom::glInvalidateNamedFramebufferData = ::glInvalidateNamedFramebufferData;
        // boom::glInvalidateNamedFramebufferSubData = ::glInvalidateNamedFramebufferSubData;
        // boom::glInvalidateSubFramebuffer = ::glInvalidateSubFramebuffer;
        // boom::glInvalidateTexImage = ::glInvalidateTexImage;
        // boom::glInvalidateTexSubImage = ::glInvalidateTexSubImage;
        boom::glIsBuffer = ::glIsBuffer;
        boom::glIsEnabled = ::glIsEnabled;
        boom::glIsEnabledi = ::glIsEnabledi;
        boom::glIsFramebuffer = ::glIsFramebuffer;
        // boom::glIsList = ::glIsList;
        boom::glIsProgram = ::glIsProgram;
        boom::glIsProgramPipeline = ::glIsProgramPipeline;
        boom::glIsQuery = ::glIsQuery;
        boom::glIsRenderbuffer = ::glIsRenderbuffer;
        boom::glIsSampler = ::glIsSampler;
        boom::glIsShader = ::glIsShader;
        boom::glIsSync = ::glIsSync;
        boom::glIsTexture = ::glIsTexture;
        boom::glIsTransformFeedback = ::glIsTransformFeedback;
        boom::glIsVertexArray = ::glIsVertexArray;
        // boom::glLightModelf = ::glLightModelf;
        // boom::glLightModelfv = ::glLightModelfv;
        // boom::glLightModeli = ::glLightModeli;
        // boom::glLightModeliv = ::glLightModeliv;
        // boom::glLightModelx = ::glLightModelx;
        // boom::glLightModelxv = ::glLightModelxv;
        // boom::glLightf = ::glLightf;
        // boom::glLightfv = ::glLightfv;
        // boom::glLighti = ::glLighti;
        // boom::glLightiv = ::glLightiv;
        // boom::glLightx = ::glLightx;
        // boom::glLightxv = ::glLightxv;
        // boom::glLineStipple = ::glLineStipple;
        boom::glLineWidth = ::glLineWidth;
        // boom::glLineWidthx = ::glLineWidthx;
        boom::glLinkProgram = ::glLinkProgram;
        // boom::glListBase = ::glListBase;
        // boom::glLoadIdentity = ::glLoadIdentity;
        // boom::glLoadMatrixd = ::glLoadMatrixd;
        // boom::glLoadMatrixf = ::glLoadMatrixf;
        // boom::glLoadMatrixx = ::glLoadMatrixx;
        // boom::glLoadName = ::glLoadName;
        // boom::glLoadTransposeMatrixd = ::glLoadTransposeMatrixd;
        // boom::glLoadTransposeMatrixf = ::glLoadTransposeMatrixf;
        boom::glLogicOp = ::glLogicOp;
        // boom::glMap1d = ::glMap1d;
        // boom::glMap1f = ::glMap1f;
        // boom::glMap2d = ::glMap2d;
        // boom::glMap2f = ::glMap2f;
        boom::glMapBuffer = ::glMapBuffer;
        boom::glMapBufferRange = ::glMapBufferRange;
        // boom::glMapGrid1d = ::glMapGrid1d;
        // boom::glMapGrid1f = ::glMapGrid1f;
        // boom::glMapGrid2d = ::glMapGrid2d;
        // boom::glMapGrid2f = ::glMapGrid2f;
        // boom::glMapNamedBuffer = ::glMapNamedBuffer;
        // boom::glMapNamedBufferRange = ::glMapNamedBufferRange;
        // boom::glMaterialf = ::glMaterialf;
        // boom::glMaterialfv = ::glMaterialfv;
        // boom::glMateriali = ::glMateriali;
        // boom::glMaterialiv = ::glMaterialiv;
        // boom::glMaterialx = ::glMaterialx;
        // boom::glMaterialxv = ::glMaterialxv;
        // boom::glMatrixMode = ::glMatrixMode;
        // boom::glMemoryBarrier = ::glMemoryBarrier;
        // boom::glMemoryBarrierByRegion = ::glMemoryBarrierByRegion;
        boom::glMinSampleShading = ::glMinSampleShading;
        // boom::glMultMatrixd = ::glMultMatrixd;
        // boom::glMultMatrixf = ::glMultMatrixf;
        // boom::glMultMatrixx = ::glMultMatrixx;
        // boom::glMultTransposeMatrixd = ::glMultTransposeMatrixd;
        // boom::glMultTransposeMatrixf = ::glMultTransposeMatrixf;
        boom::glMultiDrawArrays = ::glMultiDrawArrays;
        // boom::glMultiDrawArraysIndirect = ::glMultiDrawArraysIndirect;
        // boom::glMultiDrawArraysIndirectCount = ::glMultiDrawArraysIndirectCount;
        boom::glMultiDrawElements = ::glMultiDrawElements;
        boom::glMultiDrawElementsBaseVertex = ::glMultiDrawElementsBaseVertex;
        // boom::glMultiDrawElementsIndirect = ::glMultiDrawElementsIndirect;
        // boom::glMultiDrawElementsIndirectCount = ::glMultiDrawElementsIndirectCount;
        // boom::glMultiTexCoord1d = ::glMultiTexCoord1d;
        // boom::glMultiTexCoord1dv = ::glMultiTexCoord1dv;
        // boom::glMultiTexCoord1f = ::glMultiTexCoord1f;
        // boom::glMultiTexCoord1fv = ::glMultiTexCoord1fv;
        // boom::glMultiTexCoord1i = ::glMultiTexCoord1i;
        // boom::glMultiTexCoord1iv = ::glMultiTexCoord1iv;
        // boom::glMultiTexCoord1s = ::glMultiTexCoord1s;
        // boom::glMultiTexCoord1sv = ::glMultiTexCoord1sv;
        // boom::glMultiTexCoord2d = ::glMultiTexCoord2d;
        // boom::glMultiTexCoord2dv = ::glMultiTexCoord2dv;
        // boom::glMultiTexCoord2f = ::glMultiTexCoord2f;
        // boom::glMultiTexCoord2fv = ::glMultiTexCoord2fv;
        // boom::glMultiTexCoord2i = ::glMultiTexCoord2i;
        // boom::glMultiTexCoord2iv = ::glMultiTexCoord2iv;
        // boom::glMultiTexCoord2s = ::glMultiTexCoord2s;
        // boom::glMultiTexCoord2sv = ::glMultiTexCoord2sv;
        // boom::glMultiTexCoord3d = ::glMultiTexCoord3d;
        // boom::glMultiTexCoord3dv = ::glMultiTexCoord3dv;
        // boom::glMultiTexCoord3f = ::glMultiTexCoord3f;
        // boom::glMultiTexCoord3fv = ::glMultiTexCoord3fv;
        // boom::glMultiTexCoord3i = ::glMultiTexCoord3i;
        // boom::glMultiTexCoord3iv = ::glMultiTexCoord3iv;
        // boom::glMultiTexCoord3s = ::glMultiTexCoord3s;
        // boom::glMultiTexCoord3sv = ::glMultiTexCoord3sv;
        // boom::glMultiTexCoord4d = ::glMultiTexCoord4d;
        // boom::glMultiTexCoord4dv = ::glMultiTexCoord4dv;
        // boom::glMultiTexCoord4f = ::glMultiTexCoord4f;
        // boom::glMultiTexCoord4fv = ::glMultiTexCoord4fv;
        // boom::glMultiTexCoord4i = ::glMultiTexCoord4i;
        // boom::glMultiTexCoord4iv = ::glMultiTexCoord4iv;
        // boom::glMultiTexCoord4s = ::glMultiTexCoord4s;
        // boom::glMultiTexCoord4sv = ::glMultiTexCoord4sv;
        // boom::glMultiTexCoord4x = ::glMultiTexCoord4x;
        // boom::glMultiTexCoordP1ui = ::glMultiTexCoordP1ui;
        // boom::glMultiTexCoordP1uiv = ::glMultiTexCoordP1uiv;
        // boom::glMultiTexCoordP2ui = ::glMultiTexCoordP2ui;
        // boom::glMultiTexCoordP2uiv = ::glMultiTexCoordP2uiv;
        // boom::glMultiTexCoordP3ui = ::glMultiTexCoordP3ui;
        // boom::glMultiTexCoordP3uiv = ::glMultiTexCoordP3uiv;
        // boom::glMultiTexCoordP4ui = ::glMultiTexCoordP4ui;
        // boom::glMultiTexCoordP4uiv = ::glMultiTexCoordP4uiv;
        // boom::glNamedBufferData = ::glNamedBufferData;
        // boom::glNamedBufferStorage = ::glNamedBufferStorage;
        // boom::glNamedBufferSubData = ::glNamedBufferSubData;
        // boom::glNamedFramebufferDrawBuffer = ::glNamedFramebufferDrawBuffer;
        // boom::glNamedFramebufferDrawBuffers = ::glNamedFramebufferDrawBuffers;
        // boom::glNamedFramebufferParameteri = ::glNamedFramebufferParameteri;
        // boom::glNamedFramebufferReadBuffer = ::glNamedFramebufferReadBuffer;
        // boom::glNamedFramebufferRenderbuffer = ::glNamedFramebufferRenderbuffer;
        // boom::glNamedFramebufferTexture = ::glNamedFramebufferTexture;
        // boom::glNamedFramebufferTextureLayer = ::glNamedFramebufferTextureLayer;
        // boom::glNamedRenderbufferStorage = ::glNamedRenderbufferStorage;
        // boom::glNamedRenderbufferStorageMultisample = ::glNamedRenderbufferStorageMultisample;
        // boom::glNewList = ::glNewList;
        // boom::glNormal3b = ::glNormal3b;
        // boom::glNormal3bv = ::glNormal3bv;
        // boom::glNormal3d = ::glNormal3d;
        // boom::glNormal3dv = ::glNormal3dv;
        // boom::glNormal3f = ::glNormal3f;
        // boom::glNormal3fv = ::glNormal3fv;
        // boom::glNormal3i = ::glNormal3i;
        // boom::glNormal3iv = ::glNormal3iv;
        // boom::glNormal3s = ::glNormal3s;
        // boom::glNormal3sv = ::glNormal3sv;
        // boom::glNormal3x = ::glNormal3x;
        // boom::glNormalP3ui = ::glNormalP3ui;
        // boom::glNormalP3uiv = ::glNormalP3uiv;
        // boom::glNormalPointer = ::glNormalPointer;
        // boom::glObjectLabel = ::glObjectLabel;
        // boom::glObjectPtrLabel = ::glObjectPtrLabel;
        // boom::glOrtho = ::glOrtho;
        // boom::glOrthof = ::glOrthof;
        // boom::glOrthox = ::glOrthox;
        // boom::glPassThrough = ::glPassThrough;
        boom::glPatchParameterfv = ::glPatchParameterfv;
        boom::glPatchParameteri = ::glPatchParameteri;
        boom::glPauseTransformFeedback = ::glPauseTransformFeedback;
        // boom::glPixelMapfv = ::glPixelMapfv;
        // boom::glPixelMapuiv = ::glPixelMapuiv;
        // boom::glPixelMapusv = ::glPixelMapusv;
        boom::glPixelStoref = ::glPixelStoref;
        boom::glPixelStorei = ::glPixelStorei;
        // boom::glPixelTransferf = ::glPixelTransferf;
        // boom::glPixelTransferi = ::glPixelTransferi;
        // boom::glPixelZoom = ::glPixelZoom;
        boom::glPointParameterf = ::glPointParameterf;
        boom::glPointParameterfv = ::glPointParameterfv;
        boom::glPointParameteri = ::glPointParameteri;
        boom::glPointParameteriv = ::glPointParameteriv;
        // boom::glPointParameterx = ::glPointParameterx;
        // boom::glPointParameterxv = ::glPointParameterxv;
        boom::glPointSize = ::glPointSize;
        // boom::glPointSizex = ::glPointSizex;
        boom::glPolygonMode = ::glPolygonMode;
        boom::glPolygonOffset = ::glPolygonOffset;
        // boom::glPolygonOffsetClamp = ::glPolygonOffsetClamp;
        // boom::glPolygonOffsetx = ::glPolygonOffsetx;
        // boom::glPolygonStipple = ::glPolygonStipple;
        // boom::glPopAttrib = ::glPopAttrib;
        // boom::glPopClientAttrib = ::glPopClientAttrib;
        // boom::glPopDebugGroup = ::glPopDebugGroup;
        // boom::glPopMatrix = ::glPopMatrix;
        // boom::glPopName = ::glPopName;
        // boom::glPrimitiveBoundingBox = ::glPrimitiveBoundingBox;
        boom::glPrimitiveRestartIndex = ::glPrimitiveRestartIndex;
        // boom::glPrioritizeTextures = ::glPrioritizeTextures;
        boom::glProgramBinary = ::glProgramBinary;
        boom::glProgramParameteri = ::glProgramParameteri;
        boom::glProgramUniform1d = ::glProgramUniform1d;
        boom::glProgramUniform1dv = ::glProgramUniform1dv;
        boom::glProgramUniform1f = ::glProgramUniform1f;
        boom::glProgramUniform1fv = ::glProgramUniform1fv;
        boom::glProgramUniform1i = ::glProgramUniform1i;
        boom::glProgramUniform1iv = ::glProgramUniform1iv;
        boom::glProgramUniform1ui = ::glProgramUniform1ui;
        boom::glProgramUniform1uiv = ::glProgramUniform1uiv;
        boom::glProgramUniform2d = ::glProgramUniform2d;
        boom::glProgramUniform2dv = ::glProgramUniform2dv;
        boom::glProgramUniform2f = ::glProgramUniform2f;
        boom::glProgramUniform2fv = ::glProgramUniform2fv;
        boom::glProgramUniform2i = ::glProgramUniform2i;
        boom::glProgramUniform2iv = ::glProgramUniform2iv;
        boom::glProgramUniform2ui = ::glProgramUniform2ui;
        boom::glProgramUniform2uiv = ::glProgramUniform2uiv;
        boom::glProgramUniform3d = ::glProgramUniform3d;
        boom::glProgramUniform3dv = ::glProgramUniform3dv;
        boom::glProgramUniform3f = ::glProgramUniform3f;
        boom::glProgramUniform3fv = ::glProgramUniform3fv;
        boom::glProgramUniform3i = ::glProgramUniform3i;
        boom::glProgramUniform3iv = ::glProgramUniform3iv;
        boom::glProgramUniform3ui = ::glProgramUniform3ui;
        boom::glProgramUniform3uiv = ::glProgramUniform3uiv;
        boom::glProgramUniform4d = ::glProgramUniform4d;
        boom::glProgramUniform4dv = ::glProgramUniform4dv;
        boom::glProgramUniform4f = ::glProgramUniform4f;
        boom::glProgramUniform4fv = ::glProgramUniform4fv;
        boom::glProgramUniform4i = ::glProgramUniform4i;
        boom::glProgramUniform4iv = ::glProgramUniform4iv;
        boom::glProgramUniform4ui = ::glProgramUniform4ui;
        boom::glProgramUniform4uiv = ::glProgramUniform4uiv;
        boom::glProgramUniformMatrix2dv = ::glProgramUniformMatrix2dv;
        boom::glProgramUniformMatrix2fv = ::glProgramUniformMatrix2fv;
        boom::glProgramUniformMatrix2x3dv = ::glProgramUniformMatrix2x3dv;
        boom::glProgramUniformMatrix2x3fv = ::glProgramUniformMatrix2x3fv;
        boom::glProgramUniformMatrix2x4dv = ::glProgramUniformMatrix2x4dv;
        boom::glProgramUniformMatrix2x4fv = ::glProgramUniformMatrix2x4fv;
        boom::glProgramUniformMatrix3dv = ::glProgramUniformMatrix3dv;
        boom::glProgramUniformMatrix3fv = ::glProgramUniformMatrix3fv;
        boom::glProgramUniformMatrix3x2dv = ::glProgramUniformMatrix3x2dv;
        boom::glProgramUniformMatrix3x2fv = ::glProgramUniformMatrix3x2fv;
        boom::glProgramUniformMatrix3x4dv = ::glProgramUniformMatrix3x4dv;
        boom::glProgramUniformMatrix3x4fv = ::glProgramUniformMatrix3x4fv;
        boom::glProgramUniformMatrix4dv = ::glProgramUniformMatrix4dv;
        boom::glProgramUniformMatrix4fv = ::glProgramUniformMatrix4fv;
        boom::glProgramUniformMatrix4x2dv = ::glProgramUniformMatrix4x2dv;
        boom::glProgramUniformMatrix4x2fv = ::glProgramUniformMatrix4x2fv;
        boom::glProgramUniformMatrix4x3dv = ::glProgramUniformMatrix4x3dv;
        boom::glProgramUniformMatrix4x3fv = ::glProgramUniformMatrix4x3fv;
        boom::glProvokingVertex = ::glProvokingVertex;
        // boom::glPushAttrib = ::glPushAttrib;
        // boom::glPushClientAttrib = ::glPushClientAttrib;
        // boom::glPushDebugGroup = ::glPushDebugGroup;
        // boom::glPushMatrix = ::glPushMatrix;
        // boom::glPushName = ::glPushName;
        boom::glQueryCounter = ::glQueryCounter;
        // boom::glRasterPos2d = ::glRasterPos2d;
        // boom::glRasterPos2dv = ::glRasterPos2dv;
        // boom::glRasterPos2f = ::glRasterPos2f;
        // boom::glRasterPos2fv = ::glRasterPos2fv;
        // boom::glRasterPos2i = ::glRasterPos2i;
        // boom::glRasterPos2iv = ::glRasterPos2iv;
        // boom::glRasterPos2s = ::glRasterPos2s;
        // boom::glRasterPos2sv = ::glRasterPos2sv;
        // boom::glRasterPos3d = ::glRasterPos3d;
        // boom::glRasterPos3dv = ::glRasterPos3dv;
        // boom::glRasterPos3f = ::glRasterPos3f;
        // boom::glRasterPos3fv = ::glRasterPos3fv;
        // boom::glRasterPos3i = ::glRasterPos3i;
        // boom::glRasterPos3iv = ::glRasterPos3iv;
        // boom::glRasterPos3s = ::glRasterPos3s;
        // boom::glRasterPos3sv = ::glRasterPos3sv;
        // boom::glRasterPos4d = ::glRasterPos4d;
        // boom::glRasterPos4dv = ::glRasterPos4dv;
        // boom::glRasterPos4f = ::glRasterPos4f;
        // boom::glRasterPos4fv = ::glRasterPos4fv;
        // boom::glRasterPos4i = ::glRasterPos4i;
        // boom::glRasterPos4iv = ::glRasterPos4iv;
        // boom::glRasterPos4s = ::glRasterPos4s;
        // boom::glRasterPos4sv = ::glRasterPos4sv;
        boom::glReadBuffer = ::glReadBuffer;
        boom::glReadPixels = ::glReadPixels;
        // boom::glReadnPixels = ::glReadnPixels;
        // boom::glRectd = ::glRectd;
        // boom::glRectdv = ::glRectdv;
        // boom::glRectf = ::glRectf;
        // boom::glRectfv = ::glRectfv;
        // boom::glRecti = ::glRecti;
        // boom::glRectiv = ::glRectiv;
        // boom::glRects = ::glRects;
        // boom::glRectsv = ::glRectsv;
        boom::glReleaseShaderCompiler = ::glReleaseShaderCompiler;
        // boom::glRenderMode = ::glRenderMode;
        boom::glRenderbufferStorage = ::glRenderbufferStorage;
        boom::glRenderbufferStorageMultisample = ::glRenderbufferStorageMultisample;
        boom::glResumeTransformFeedback = ::glResumeTransformFeedback;
        // boom::glRotated = ::glRotated;
        // boom::glRotatef = ::glRotatef;
        // boom::glRotatex = ::glRotatex;
        boom::glSampleCoverage = ::glSampleCoverage;
        // boom::glSampleCoveragex = ::glSampleCoveragex;
        boom::glSampleMaski = ::glSampleMaski;
        boom::glSamplerParameterIiv = ::glSamplerParameterIiv;
        boom::glSamplerParameterIuiv = ::glSamplerParameterIuiv;
        boom::glSamplerParameterf = ::glSamplerParameterf;
        boom::glSamplerParameterfv = ::glSamplerParameterfv;
        boom::glSamplerParameteri = ::glSamplerParameteri;
        boom::glSamplerParameteriv = ::glSamplerParameteriv;
        // boom::glScaled = ::glScaled;
        // boom::glScalef = ::glScalef;
        // boom::glScalex = ::glScalex;
        boom::glScissor = ::glScissor;
        boom::glScissorArrayv = ::glScissorArrayv;
        boom::glScissorIndexed = ::glScissorIndexed;
        boom::glScissorIndexedv = ::glScissorIndexedv;
        // boom::glSecondaryColor3b = ::glSecondaryColor3b;
        // boom::glSecondaryColor3bv = ::glSecondaryColor3bv;
        // boom::glSecondaryColor3d = ::glSecondaryColor3d;
        // boom::glSecondaryColor3dv = ::glSecondaryColor3dv;
        // boom::glSecondaryColor3f = ::glSecondaryColor3f;
        // boom::glSecondaryColor3fv = ::glSecondaryColor3fv;
        // boom::glSecondaryColor3i = ::glSecondaryColor3i;
        // boom::glSecondaryColor3iv = ::glSecondaryColor3iv;
        // boom::glSecondaryColor3s = ::glSecondaryColor3s;
        // boom::glSecondaryColor3sv = ::glSecondaryColor3sv;
        // boom::glSecondaryColor3ub = ::glSecondaryColor3ub;
        // boom::glSecondaryColor3ubv = ::glSecondaryColor3ubv;
        // boom::glSecondaryColor3ui = ::glSecondaryColor3ui;
        // boom::glSecondaryColor3uiv = ::glSecondaryColor3uiv;
        // boom::glSecondaryColor3us = ::glSecondaryColor3us;
        // boom::glSecondaryColor3usv = ::glSecondaryColor3usv;
        // boom::glSecondaryColorP3ui = ::glSecondaryColorP3ui;
        // boom::glSecondaryColorP3uiv = ::glSecondaryColorP3uiv;
        // boom::glSecondaryColorPointer = ::glSecondaryColorPointer;
        // boom::glSelectBuffer = ::glSelectBuffer;
        // boom::glShadeModel = ::glShadeModel;
        boom::glShaderBinary = ::glShaderBinary;
        boom::glShaderSource = ::glShaderSource;
        // boom::glShaderStorageBlockBinding = ::glShaderStorageBlockBinding;
        // boom::glSpecializeShader = ::glSpecializeShader;
        boom::glStencilFunc = ::glStencilFunc;
        boom::glStencilFuncSeparate = ::glStencilFuncSeparate;
        boom::glStencilMask = ::glStencilMask;
        boom::glStencilMaskSeparate = ::glStencilMaskSeparate;
        boom::glStencilOp = ::glStencilOp;
        boom::glStencilOpSeparate = ::glStencilOpSeparate;
        boom::glTexBuffer = ::glTexBuffer;
        // boom::glTexBufferRange = ::glTexBufferRange;
        // boom::glTexCoord1d = ::glTexCoord1d;
        // boom::glTexCoord1dv = ::glTexCoord1dv;
        // boom::glTexCoord1f = ::glTexCoord1f;
        // boom::glTexCoord1fv = ::glTexCoord1fv;
        // boom::glTexCoord1i = ::glTexCoord1i;
        // boom::glTexCoord1iv = ::glTexCoord1iv;
        // boom::glTexCoord1s = ::glTexCoord1s;
        // boom::glTexCoord1sv = ::glTexCoord1sv;
        // boom::glTexCoord2d = ::glTexCoord2d;
        // boom::glTexCoord2dv = ::glTexCoord2dv;
        // boom::glTexCoord2f = ::glTexCoord2f;
        // boom::glTexCoord2fv = ::glTexCoord2fv;
        // boom::glTexCoord2i = ::glTexCoord2i;
        // boom::glTexCoord2iv = ::glTexCoord2iv;
        // boom::glTexCoord2s = ::glTexCoord2s;
        // boom::glTexCoord2sv = ::glTexCoord2sv;
        // boom::glTexCoord3d = ::glTexCoord3d;
        // boom::glTexCoord3dv = ::glTexCoord3dv;
        // boom::glTexCoord3f = ::glTexCoord3f;
        // boom::glTexCoord3fv = ::glTexCoord3fv;
        // boom::glTexCoord3i = ::glTexCoord3i;
        // boom::glTexCoord3iv = ::glTexCoord3iv;
        // boom::glTexCoord3s = ::glTexCoord3s;
        // boom::glTexCoord3sv = ::glTexCoord3sv;
        // boom::glTexCoord4d = ::glTexCoord4d;
        // boom::glTexCoord4dv = ::glTexCoord4dv;
        // boom::glTexCoord4f = ::glTexCoord4f;
        // boom::glTexCoord4fv = ::glTexCoord4fv;
        // boom::glTexCoord4i = ::glTexCoord4i;
        // boom::glTexCoord4iv = ::glTexCoord4iv;
        // boom::glTexCoord4s = ::glTexCoord4s;
        // boom::glTexCoord4sv = ::glTexCoord4sv;
        // boom::glTexCoordP1ui = ::glTexCoordP1ui;
        // boom::glTexCoordP1uiv = ::glTexCoordP1uiv;
        // boom::glTexCoordP2ui = ::glTexCoordP2ui;
        // boom::glTexCoordP2uiv = ::glTexCoordP2uiv;
        // boom::glTexCoordP3ui = ::glTexCoordP3ui;
        // boom::glTexCoordP3uiv = ::glTexCoordP3uiv;
        // boom::glTexCoordP4ui = ::glTexCoordP4ui;
        // boom::glTexCoordP4uiv = ::glTexCoordP4uiv;
        // boom::glTexCoordPointer = ::glTexCoordPointer;
        // boom::glTexEnvf = ::glTexEnvf;
        // boom::glTexEnvfv = ::glTexEnvfv;
        // boom::glTexEnvi = ::glTexEnvi;
        // boom::glTexEnviv = ::glTexEnviv;
        // boom::glTexEnvx = ::glTexEnvx;
        // boom::glTexEnvxv = ::glTexEnvxv;
        // boom::glTexGend = ::glTexGend;
        // boom::glTexGendv = ::glTexGendv;
        // boom::glTexGenf = ::glTexGenf;
        // boom::glTexGenfv = ::glTexGenfv;
        // boom::glTexGeni = ::glTexGeni;
        // boom::glTexGeniv = ::glTexGeniv;
        boom::glTexImage1D = ::glTexImage1D;
        boom::glTexImage2D = ::glTexImage2D;
        boom::glTexImage2DMultisample = ::glTexImage2DMultisample;
        boom::glTexImage3D = ::glTexImage3D;
        boom::glTexImage3DMultisample = ::glTexImage3DMultisample;
        boom::glTexParameterIiv = ::glTexParameterIiv;
        boom::glTexParameterIuiv = ::glTexParameterIuiv;
        boom::glTexParameterf = ::glTexParameterf;
        boom::glTexParameterfv = ::glTexParameterfv;
        boom::glTexParameteri = ::glTexParameteri;
        boom::glTexParameteriv = ::glTexParameteriv;
        // boom::glTexParameterx = ::glTexParameterx;
        // boom::glTexParameterxv = ::glTexParameterxv;
        boom::glTexStorage1D = ::glTexStorage1D;
        boom::glTexStorage2D = ::glTexStorage2D;
        // boom::glTexStorage2DMultisample = ::glTexStorage2DMultisample;
        boom::glTexStorage3D = ::glTexStorage3D;
        // boom::glTexStorage3DMultisample = ::glTexStorage3DMultisample;
        boom::glTexSubImage1D = ::glTexSubImage1D;
        boom::glTexSubImage2D = ::glTexSubImage2D;
        boom::glTexSubImage3D = ::glTexSubImage3D;
        // boom::glTextureBarrier = ::glTextureBarrier;
        // boom::glTextureBuffer = ::glTextureBuffer;
        // boom::glTextureBufferRange = ::glTextureBufferRange;
        // boom::glTextureParameterIiv = ::glTextureParameterIiv;
        // boom::glTextureParameterIuiv = ::glTextureParameterIuiv;
        // boom::glTextureParameterf = ::glTextureParameterf;
        // boom::glTextureParameterfv = ::glTextureParameterfv;
        // boom::glTextureParameteri = ::glTextureParameteri;
        // boom::glTextureParameteriv = ::glTextureParameteriv;
        // boom::glTextureStorage1D = ::glTextureStorage1D;
        // boom::glTextureStorage2D = ::glTextureStorage2D;
        // boom::glTextureStorage2DMultisample = ::glTextureStorage2DMultisample;
        // boom::glTextureStorage3D = ::glTextureStorage3D;
        // boom::glTextureStorage3DMultisample = ::glTextureStorage3DMultisample;
        // boom::glTextureSubImage1D = ::glTextureSubImage1D;
        // boom::glTextureSubImage2D = ::glTextureSubImage2D;
        // boom::glTextureSubImage3D = ::glTextureSubImage3D;
        // boom::glTextureView = ::glTextureView;
        // boom::glTransformFeedbackBufferBase = ::glTransformFeedbackBufferBase;
        // boom::glTransformFeedbackBufferRange = ::glTransformFeedbackBufferRange;
        boom::glTransformFeedbackVaryings = ::glTransformFeedbackVaryings;
        // boom::glTranslated = ::glTranslated;
        // boom::glTranslatef = ::glTranslatef;
        // boom::glTranslatex = ::glTranslatex;
        boom::glUniform1d = ::glUniform1d;
        boom::glUniform1dv = ::glUniform1dv;
        boom::glUniform1f = ::glUniform1f;
        boom::glUniform1fv = ::glUniform1fv;
        boom::glUniform1i = ::glUniform1i;
        boom::glUniform1iv = ::glUniform1iv;
        boom::glUniform1ui = ::glUniform1ui;
        boom::glUniform1uiv = ::glUniform1uiv;
        boom::glUniform2d = ::glUniform2d;
        boom::glUniform2dv = ::glUniform2dv;
        boom::glUniform2f = ::glUniform2f;
        boom::glUniform2fv = ::glUniform2fv;
        boom::glUniform2i = ::glUniform2i;
        boom::glUniform2iv = ::glUniform2iv;
        boom::glUniform2ui = ::glUniform2ui;
        boom::glUniform2uiv = ::glUniform2uiv;
        boom::glUniform3d = ::glUniform3d;
        boom::glUniform3dv = ::glUniform3dv;
        boom::glUniform3f = ::glUniform3f;
        boom::glUniform3fv = ::glUniform3fv;
        boom::glUniform3i = ::glUniform3i;
        boom::glUniform3iv = ::glUniform3iv;
        boom::glUniform3ui = ::glUniform3ui;
        boom::glUniform3uiv = ::glUniform3uiv;
        boom::glUniform4d = ::glUniform4d;
        boom::glUniform4dv = ::glUniform4dv;
        boom::glUniform4f = ::glUniform4f;
        boom::glUniform4fv = ::glUniform4fv;
        boom::glUniform4i = ::glUniform4i;
        boom::glUniform4iv = ::glUniform4iv;
        boom::glUniform4ui = ::glUniform4ui;
        boom::glUniform4uiv = ::glUniform4uiv;
        boom::glUniformBlockBinding = ::glUniformBlockBinding;
        boom::glUniformMatrix2dv = ::glUniformMatrix2dv;
        boom::glUniformMatrix2fv = ::glUniformMatrix2fv;
        boom::glUniformMatrix2x3dv = ::glUniformMatrix2x3dv;
        boom::glUniformMatrix2x3fv = ::glUniformMatrix2x3fv;
        boom::glUniformMatrix2x4dv = ::glUniformMatrix2x4dv;
        boom::glUniformMatrix2x4fv = ::glUniformMatrix2x4fv;
        boom::glUniformMatrix3dv = ::glUniformMatrix3dv;
        boom::glUniformMatrix3fv = ::glUniformMatrix3fv;
        boom::glUniformMatrix3x2dv = ::glUniformMatrix3x2dv;
        boom::glUniformMatrix3x2fv = ::glUniformMatrix3x2fv;
        boom::glUniformMatrix3x4dv = ::glUniformMatrix3x4dv;
        boom::glUniformMatrix3x4fv = ::glUniformMatrix3x4fv;
        boom::glUniformMatrix4dv = ::glUniformMatrix4dv;
        boom::glUniformMatrix4fv = ::glUniformMatrix4fv;
        boom::glUniformMatrix4x2dv = ::glUniformMatrix4x2dv;
        boom::glUniformMatrix4x2fv = ::glUniformMatrix4x2fv;
        boom::glUniformMatrix4x3dv = ::glUniformMatrix4x3dv;
        boom::glUniformMatrix4x3fv = ::glUniformMatrix4x3fv;
        boom::glUniformSubroutinesuiv = ::glUniformSubroutinesuiv;
        boom::glUnmapBuffer = ::glUnmapBuffer;
        // boom::glUnmapNamedBuffer = ::glUnmapNamedBuffer;
        boom::glUseProgram = ::glUseProgram;
        boom::glUseProgramStages = ::glUseProgramStages;
        boom::glValidateProgram = ::glValidateProgram;
        boom::glValidateProgramPipeline = ::glValidateProgramPipeline;
        // boom::glVertex2d = ::glVertex2d;
        // boom::glVertex2dv = ::glVertex2dv;
        // boom::glVertex2f = ::glVertex2f;
        // boom::glVertex2fv = ::glVertex2fv;
        // boom::glVertex2i = ::glVertex2i;
        // boom::glVertex2iv = ::glVertex2iv;
        // boom::glVertex2s = ::glVertex2s;
        // boom::glVertex2sv = ::glVertex2sv;
        // boom::glVertex3d = ::glVertex3d;
        // boom::glVertex3dv = ::glVertex3dv;
        // boom::glVertex3f = ::glVertex3f;
        // boom::glVertex3fv = ::glVertex3fv;
        // boom::glVertex3i = ::glVertex3i;
        // boom::glVertex3iv = ::glVertex3iv;
        // boom::glVertex3s = ::glVertex3s;
        // boom::glVertex3sv = ::glVertex3sv;
        // boom::glVertex4d = ::glVertex4d;
        // boom::glVertex4dv = ::glVertex4dv;
        // boom::glVertex4f = ::glVertex4f;
        // boom::glVertex4fv = ::glVertex4fv;
        // boom::glVertex4i = ::glVertex4i;
        // boom::glVertex4iv = ::glVertex4iv;
        // boom::glVertex4s = ::glVertex4s;
        // boom::glVertex4sv = ::glVertex4sv;
        // boom::glVertexArrayAttribBinding = ::glVertexArrayAttribBinding;
        // boom::glVertexArrayAttribFormat = ::glVertexArrayAttribFormat;
        // boom::glVertexArrayAttribIFormat = ::glVertexArrayAttribIFormat;
        // boom::glVertexArrayAttribLFormat = ::glVertexArrayAttribLFormat;
        // boom::glVertexArrayBindingDivisor = ::glVertexArrayBindingDivisor;
        // boom::glVertexArrayElementBuffer = ::glVertexArrayElementBuffer;
        // boom::glVertexArrayVertexBuffer = ::glVertexArrayVertexBuffer;
        // boom::glVertexArrayVertexBuffers = ::glVertexArrayVertexBuffers;
        boom::glVertexAttrib1d = ::glVertexAttrib1d;
        boom::glVertexAttrib1dv = ::glVertexAttrib1dv;
        boom::glVertexAttrib1f = ::glVertexAttrib1f;
        boom::glVertexAttrib1fv = ::glVertexAttrib1fv;
        boom::glVertexAttrib1s = ::glVertexAttrib1s;
        boom::glVertexAttrib1sv = ::glVertexAttrib1sv;
        boom::glVertexAttrib2d = ::glVertexAttrib2d;
        boom::glVertexAttrib2dv = ::glVertexAttrib2dv;
        boom::glVertexAttrib2f = ::glVertexAttrib2f;
        boom::glVertexAttrib2fv = ::glVertexAttrib2fv;
        boom::glVertexAttrib2s = ::glVertexAttrib2s;
        boom::glVertexAttrib2sv = ::glVertexAttrib2sv;
        boom::glVertexAttrib3d = ::glVertexAttrib3d;
        boom::glVertexAttrib3dv = ::glVertexAttrib3dv;
        boom::glVertexAttrib3f = ::glVertexAttrib3f;
        boom::glVertexAttrib3fv = ::glVertexAttrib3fv;
        boom::glVertexAttrib3s = ::glVertexAttrib3s;
        boom::glVertexAttrib3sv = ::glVertexAttrib3sv;
        boom::glVertexAttrib4Nbv = ::glVertexAttrib4Nbv;
        boom::glVertexAttrib4Niv = ::glVertexAttrib4Niv;
        boom::glVertexAttrib4Nsv = ::glVertexAttrib4Nsv;
        boom::glVertexAttrib4Nub = ::glVertexAttrib4Nub;
        boom::glVertexAttrib4Nubv = ::glVertexAttrib4Nubv;
        boom::glVertexAttrib4Nuiv = ::glVertexAttrib4Nuiv;
        boom::glVertexAttrib4Nusv = ::glVertexAttrib4Nusv;
        boom::glVertexAttrib4bv = ::glVertexAttrib4bv;
        boom::glVertexAttrib4d = ::glVertexAttrib4d;
        boom::glVertexAttrib4dv = ::glVertexAttrib4dv;
        boom::glVertexAttrib4f = ::glVertexAttrib4f;
        boom::glVertexAttrib4fv = ::glVertexAttrib4fv;
        boom::glVertexAttrib4iv = ::glVertexAttrib4iv;
        boom::glVertexAttrib4s = ::glVertexAttrib4s;
        boom::glVertexAttrib4sv = ::glVertexAttrib4sv;
        boom::glVertexAttrib4ubv = ::glVertexAttrib4ubv;
        boom::glVertexAttrib4uiv = ::glVertexAttrib4uiv;
        boom::glVertexAttrib4usv = ::glVertexAttrib4usv;
        // boom::glVertexAttribBinding = ::glVertexAttribBinding;
        boom::glVertexAttribDivisor = ::glVertexAttribDivisor;
        // boom::glVertexAttribFormat = ::glVertexAttribFormat;
        boom::glVertexAttribI1i = ::glVertexAttribI1i;
        boom::glVertexAttribI1iv = ::glVertexAttribI1iv;
        boom::glVertexAttribI1ui = ::glVertexAttribI1ui;
        boom::glVertexAttribI1uiv = ::glVertexAttribI1uiv;
        boom::glVertexAttribI2i = ::glVertexAttribI2i;
        boom::glVertexAttribI2iv = ::glVertexAttribI2iv;
        boom::glVertexAttribI2ui = ::glVertexAttribI2ui;
        boom::glVertexAttribI2uiv = ::glVertexAttribI2uiv;
        boom::glVertexAttribI3i = ::glVertexAttribI3i;
        boom::glVertexAttribI3iv = ::glVertexAttribI3iv;
        boom::glVertexAttribI3ui = ::glVertexAttribI3ui;
        boom::glVertexAttribI3uiv = ::glVertexAttribI3uiv;
        boom::glVertexAttribI4bv = ::glVertexAttribI4bv;
        boom::glVertexAttribI4i = ::glVertexAttribI4i;
        boom::glVertexAttribI4iv = ::glVertexAttribI4iv;
        boom::glVertexAttribI4sv = ::glVertexAttribI4sv;
        boom::glVertexAttribI4ubv = ::glVertexAttribI4ubv;
        boom::glVertexAttribI4ui = ::glVertexAttribI4ui;
        boom::glVertexAttribI4uiv = ::glVertexAttribI4uiv;
        boom::glVertexAttribI4usv = ::glVertexAttribI4usv;
        // boom::glVertexAttribIFormat = ::glVertexAttribIFormat;
        boom::glVertexAttribIPointer = ::glVertexAttribIPointer;
        boom::glVertexAttribL1d = ::glVertexAttribL1d;
        boom::glVertexAttribL1dv = ::glVertexAttribL1dv;
        boom::glVertexAttribL2d = ::glVertexAttribL2d;
        boom::glVertexAttribL2dv = ::glVertexAttribL2dv;
        boom::glVertexAttribL3d = ::glVertexAttribL3d;
        boom::glVertexAttribL3dv = ::glVertexAttribL3dv;
        boom::glVertexAttribL4d = ::glVertexAttribL4d;
        boom::glVertexAttribL4dv = ::glVertexAttribL4dv;
        // boom::glVertexAttribLFormat = ::glVertexAttribLFormat;
        boom::glVertexAttribLPointer = ::glVertexAttribLPointer;
        boom::glVertexAttribP1ui = ::glVertexAttribP1ui;
        boom::glVertexAttribP1uiv = ::glVertexAttribP1uiv;
        boom::glVertexAttribP2ui = ::glVertexAttribP2ui;
        boom::glVertexAttribP2uiv = ::glVertexAttribP2uiv;
        boom::glVertexAttribP3ui = ::glVertexAttribP3ui;
        boom::glVertexAttribP3uiv = ::glVertexAttribP3uiv;
        boom::glVertexAttribP4ui = ::glVertexAttribP4ui;
        boom::glVertexAttribP4uiv = ::glVertexAttribP4uiv;
        boom::glVertexAttribPointer = ::glVertexAttribPointer;
        // boom::glVertexBindingDivisor = ::glVertexBindingDivisor;
        // boom::glVertexP2ui = ::glVertexP2ui;
        // boom::glVertexP2uiv = ::glVertexP2uiv;
        // boom::glVertexP3ui = ::glVertexP3ui;
        // boom::glVertexP3uiv = ::glVertexP3uiv;
        // boom::glVertexP4ui = ::glVertexP4ui;
        // boom::glVertexP4uiv = ::glVertexP4uiv;
        // boom::glVertexPointer = ::glVertexPointer;
        boom::glViewport = ::glViewport;
        boom::glViewportArrayv = ::glViewportArrayv;
        boom::glViewportIndexedf = ::glViewportIndexedf;
        boom::glViewportIndexedfv = ::glViewportIndexedfv;
        boom::glWaitSync = ::glWaitSync;
        // boom::glWindowPos2d = ::glWindowPos2d;
        // boom::glWindowPos2dv = ::glWindowPos2dv;
        // boom::glWindowPos2f = ::glWindowPos2f;
        // boom::glWindowPos2fv = ::glWindowPos2fv;
        // boom::glWindowPos2i = ::glWindowPos2i;
        // boom::glWindowPos2iv = ::glWindowPos2iv;
        // boom::glWindowPos2s = ::glWindowPos2s;
        // boom::glWindowPos2sv = ::glWindowPos2sv;
        // boom::glWindowPos3d = ::glWindowPos3d;
        // boom::glWindowPos3dv = ::glWindowPos3dv;
        // boom::glWindowPos3f = ::glWindowPos3f;
        // boom::glWindowPos3fv = ::glWindowPos3fv;
        // boom::glWindowPos3i = ::glWindowPos3i;
        // boom::glWindowPos3iv = ::glWindowPos3iv;
        // boom::glWindowPos3s = ::glWindowPos3s;
        // boom::glWindowPos3sv = ::glWindowPos3sv;
        bootstrapped = true;
    }
}

} /* namespace boom */